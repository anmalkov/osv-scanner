name: BuildImage

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get latest image tag
        run: |
          readarray -t tags < <(curl -L -s 'https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/osv-scanner/tags?page_size=1024' | jq '."results"[]["name"]' | tr -d '"')
          latest_tag=${tags[0]}
          if [[ $latest_tag == "latest" ]];
          then  
            latest_tag=${tags[1]}
          fi
          echo "Latest image tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      - name: Get latest release
        run: |
          release_url=$(curl -Ls -o /dev/null -w %{url_effective} https://github.com/google/osv-scanner/releases/latest)
          latest_release=$(basename $release_url)
          if [[ ${latest_release::1} == "v" ]];
          then
            latest_release=${latest_release:1}
          fi
          echo "Latest release: $latest_release"
          echo "latest_release=$latest_release" >> $GITHUB_ENV
      - name: Clone latest release
        #if: env.latest_tag != env.latest_release
        run: git clone -b v${{ env.latest_release }} -- https://github.com/google/osv-scanner.git $GITHUB_WORKSPACE/repo
      - name: Build image
        #if: env.latest_tag != env.latest_release
        run: |
          cd $GITHUB_WORKSPACE/repo
          docker build -t ${{ secrets.DOCKER_USERNAME }}/osv-scanner:${{ env.latest_release }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/osv-scanner:${{ env.latest_release }} ${{ secrets.DOCKER_USERNAME }}/osv-scanner:latest
      - name: Log in to Docker Hub
        #if: env.latest_tag != env.latest_release
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}          
      - name: Push image
        #if: env.latest_tag != env.latest_release
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/osv-scanner:${{ env.latest_release }}
          docker push ${{ secrets.DOCKER_USERNAME }}/osv-scanner:latest
          
          
